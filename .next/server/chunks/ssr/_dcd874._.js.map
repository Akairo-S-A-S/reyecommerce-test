{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/lib/products/searchProductsByName.ts"],"sourcesContent":["import { defineQuery } from \"next-sanity\";\r\nimport { sanityFetch } from \"../live\";\r\n\r\nexport const searchProductsByName = async (searchParam: string) => {\r\n    const PRODUCT_SEARCH_QUERY = defineQuery(`\r\n        *[\r\n            _type == \"product\"\r\n            && name match $searchParam\r\n        ] | order(name asc)\r\n    `);\r\n\r\n    try {\r\n        // use sanityfetch to send the query and pass the search parameter with a wildcard\r\n        const products = await sanityFetch({\r\n            query: PRODUCT_SEARCH_QUERY,\r\n            params: { \r\n                searchParam: `${searchParam}*`,\r\n            },\r\n        });\r\n\r\n        //return the list of products or an empty array if none are found \r\n        return products.data || [];\r\n    } catch (error) {\r\n        console.error('Error fetching products by name',error);\r\n        return [];\r\n    }\r\n};"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,uBAAuB,OAAO;IACvC,MAAM,uBAAuB,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;IAK1C,CAAC;IAED,IAAI;QACA,kFAAkF;QAClF,MAAM,WAAW,MAAM,CAAA,GAAA,qHAAA,CAAA,cAAW,AAAD,EAAE;YAC/B,OAAO;YACP,QAAQ;gBACJ,aAAa,GAAG,YAAY,CAAC,CAAC;YAClC;QACJ;QAEA,kEAAkE;QAClE,OAAO,SAAS,IAAI,IAAI,EAAE;IAC9B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,mCAAkC;QAChD,OAAO,EAAE;IACb;AACJ"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/app/%28store%29/search/page.tsx"],"sourcesContent":["import { searchProductsByName } from \"@/sanity/lib/products/searchProductsByName\";\r\n\r\nasync function SearchPage({\r\n    searchParams,\r\n}: {\r\n    searchParams: {\r\n        query: string;\r\n    };\r\n}) {\r\n    const { query } = await searchParams;\r\n    const products = await searchProductsByName(query);\r\n\r\n    if (!products.length) {\r\n        return (\r\n            <div className=\"flex flex-col items-center justify-top min-h-screen bg-gray-100 p-4\">\r\n                <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-4xl\">\r\n                    <h1 className=\"text-3xl font-bold mb-6 text-center\">\r\n                        No products for: {query}\r\n                    </h1>\r\n                    <p className=\"text-gray-600 text-center\">\r\n                        Try searching for something else\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <div>SearchPage for {query}</div>\r\n}\r\n\r\nexport default SearchPage;"],"names":[],"mappings":";;;;AAAA;;;AAEA,eAAe,WAAW,EACtB,YAAY,EAKf;IACG,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM;IACxB,MAAM,WAAW,MAAM,CAAA,GAAA,iJAAA,CAAA,uBAAoB,AAAD,EAAE;IAE5C,IAAI,CAAC,SAAS,MAAM,EAAE;QAClB,qBACI,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;;4BAAsC;4BAC9B;;;;;;;kCAEtB,8OAAC;wBAAE,WAAU;kCAA4B;;;;;;;;;;;;;;;;;IAMzD;IAEA,qBAAO,8OAAC;;YAAI;YAAgB;;;;;;;AAChC;uCAEe"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}